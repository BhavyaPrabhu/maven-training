<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.ambientideas</groupId>
	<artifactId>sample-groovy-jointcompilation</artifactId>
	<name>Sample Groovy+Java Joint Test+Src Compilation</name>
	<version>1.0-SNAPSHOT</version>
	
	<profiles>
		<!-- This profile functions correctly and is fashioned like the 2009-12-12 gmaven archetype -->
		<profile>
			<id>runtimedefault</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>
				<!-- The gmaven-runtime-default is not so useful anymore because it tracks too far behind
				the core Groovy version. Better to use groovy-all, which stays up to date with Groovy releases. -->
				<dependency>
				  <groupId>org.codehaus.groovy.maven.runtime</groupId>
				  <artifactId>gmaven-runtime-default</artifactId>
				  <version>1.0-rc-3</version>
				</dependency>
				
				<dependency>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
					<version>4.7</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			
			<build>
				<plugins>
					<plugin>
		                <groupId>org.codehaus.groovy.maven</groupId>
		                <artifactId>gmaven-plugin</artifactId>
		                <version>1.0-rc-3</version>
		                <executions>
		                    <execution>
		                        <goals>
		                            <goal>generateStubs</goal>
		                            <goal>compile</goal>
		                            <goal>generateTestStubs</goal>
		                            <goal>testCompile</goal>
		                        </goals>
		                    </execution>
		                </executions>
		            </plugin>
				</plugins>
			</build>
		</profile>
		
		<!-- This profile fails in a number of ways and attempted to use a newer Groovy 1.7 and newer gmaven plugin -->
		<profile>
			<id>groovyall</id>
			<dependencies>
				<dependency>
					<groupId>org.codehaus.groovy</groupId>
					<artifactId>groovy-all</artifactId>
					<version>1.7-rc-2</version>
				</dependency>
				
				<dependency>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
					<version>4.7</version>
					<!--
						Bizarre! Has to be at least provided scope, not test scope, to get
						tests to compile
					-->
					<scope>provided</scope>
				</dependency>
			</dependencies>
			
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.gmaven</groupId>
						<artifactId>gmaven-plugin</artifactId>
						<version>1.2</version>
						<executions>
							<execution>
								<goals>
									<goal>generateStubs</goal>
									<goal>compile</goal>
									<goal>generateTestStubs</goal>
									<goal>testCompile</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.codehaus.groovy</groupId>
								<artifactId>groovy-all</artifactId>
								<version>1.7-rc-2</version>
								<!--
									Notice I set the scope to provided, same as in the 1.2 plugin pom
									linked above
								-->
								<scope>provided</scope>
							</dependency>
						</dependencies>
						
						<!--
						Adding the following config causes the compile to fail
						[INFO] [groovy:generateStubs {execution: default}]
						[ERROR] BUILD ERROR
						[INFO] Unexpected node: Node[3:1,64,ANNOTATIONS]
						-->
						<!--
						<configuration>
							<sources>
								<fileset>
									<directory>${pom.basedir}/src/main/groovy</directory>
									<directory>${pom.basedir}/src/test/groovy</directory>
									<includes>
										<include>**/*.groovy</include>
										<include>**/*.java</include>
									</includes>
								</fileset>
							</sources>
						</configuration>
					    -->
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<!-- Only one source directory is allowed per Maven project, unless the build-helper plugin is used -->
		<!-- http://www.mail-archive.com/users@maven.apache.org/msg70821.html -->
		<!-- http://mojo.codehaus.org/build-helper-maven-plugin/ -->
		<sourceDirectory>src/main/groovy</sourceDirectory>	
		<testSourceDirectory>src/test/groovy</testSourceDirectory>
		
		
	</build>

</project>
